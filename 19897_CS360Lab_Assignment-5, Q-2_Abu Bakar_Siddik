Q2. Find a function with one argument, vector of vectors named vals, for coordinates of one of its elements in row and col to print the values that lie on the lower-left to upper-right diagonal of vals. After that, verify it in main function.



Ans: 
#include <iostream>
#include <vector>

using std::vector;
using std::cout;
using std::endl;

void printDiagonal(const vector<vector<int>>& vals, int row, int col) {
    int r = row, c = col;
    
    // Move to the lower-left corner of the diagonal
    while (r < vals.size() - 1 && c > 0) {
        r++;
        c--;
    }
    
    // Print the diagonal from lower-left to upper-right
    while (r >= 0 && c < vals[r].size()) {
        cout << vals[r][c] << " ";
        r--;
        c++;
    }
    cout << endl;
}

void printMatrix(const vector<vector<int>>& matrix) {
    for (const auto& row : matrix) {
        for (int val : row) {
            cout << val << " ";
        }
        cout << endl;
    }
}

int main() {
    vector<vector<int>> vals = {
        {1, 2, 3, 4},
        {5, 6, 7, 8},
        {9, 10, 11, 12},
        {13, 14, 15, 16}
    };
    
    // Printing the entire matrix
    cout << "Matrix:" << endl;
    printMatrix(vals);
    
    // Printing the diagonal values from a point in the matrix
    cout << "\nDiagonal from lower-left to upper-right:" << endl;
    int row = 2, col = 1; 
    printDiagonal(vals, row, col);
    
    return 0;
}
